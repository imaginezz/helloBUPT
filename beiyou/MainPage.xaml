<Page
    x:Name="Root"
    x:Class="HelloBUPT.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HelloBUPT"
    xmlns:sidebarmenu="using:HelloBUPT.SideBarMenu"
    xmlns:common="using:HelloBUPT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    RequestedTheme="{x:Bind currentTheme.Theme, Mode=OneWay}">
    
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="SideBarMenu/Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="Theme/LightThemeDictionary.xaml" x:Key="Light" />
                <ResourceDictionary Source="Theme/DarkThemeDictionary.xaml" x:Key="Dark" />
            </ResourceDictionary.ThemeDictionaries>
            <DataTemplate x:Key="SplitMenuDataTemplate">
                <StackPanel Orientation="Horizontal" Height="48">
                    <SymbolIcon Symbol="{Binding Icon}" Width="22"/>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="18,0,0,0"/>
                </StackPanel>
            </DataTemplate>
            <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <!-- 自适应 -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="mainSplitView.IsPaneOpen" Value="True" />
                        <Setter Target="hamburgerButton.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="mainSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="hamburgerButton.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="Inline" />
                        <Setter Target="mainSplitView.IsPaneOpen" Value="True" />
                        <Setter Target="hamburgerButton.IsEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!-- SplitView -->
        <SplitView Name="mainSplitView" OpenPaneLength="240" CompactPaneLength="48" 
                       PaneBackground="LightGray" DisplayMode="{x:Bind splitViewModel.DisplayMode, Mode=TwoWay}" 
                       IsPaneOpen="{x:Bind splitViewModel.IsPaneOpen, Mode=TwoWay}" >
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Height="48">
                        <!--<Button Name="hamburgerButton" FontFamily="Segoe MDL2 Assets" 
                                    Content="&#xE700;" FontSize="24" 
                                    Command="{x:Bind splitViewModel.HamburgerButtonCommand}" /> -->
                        <TextBlock Margin="52,0,0,0"  VerticalAlignment="Center" 
                                   Text="{x:Bind NavMenuTitle}" />
                    </StackPanel>
                    <sidebarmenu:SplitViewModel x:Name="mainListView"
                                                Grid.Row="1" 
                                                ItemsSource="{x:Bind NavMenuList}" 
                                                ItemTemplate="{StaticResource SplitMenuDataTemplate}"
                                                ItemInvoked="NavMenuList_ItemInvoked" />
                    <!--ListView Grid.Row="1" x:Name="mainListView" 
                                  ItemsSource="{x:Bind NavMenuList}" 
                                  ItemTemplate="{StaticResource SplitMenuDataTemplate}" / -->
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Frame Name="mainFrame"/>
            </SplitView.Content>
        </SplitView>
        
        <!-- Hamburger Button -->

        <ToggleButton x:Name="hamburgerButton"
            Visibility="{x:Bind splitViewModel.IsInDetailsMode, Mode=OneWay, ConverterParameter=Reverse, Converter={StaticResource BooleanToVisibilityConverter}}"
            Margin="0"
            TabIndex="1"        
            AutomationProperties.Name="Menu" ToolTipService.ToolTip="Menu"
            Style="{StaticResource SplitViewTogglePaneButtonStyle}" 
            Command="{x:Bind splitViewModel.HamburgerButtonCommand}"/>
        <!-- IsChecked="{Binding IsPaneOpen, ElementName=mainSplitView, Mode=TwoWay}" -->
    </Grid>
</Page>
